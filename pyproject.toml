[project]
  authors = [
    { name = "Sasan Jacob Rasti", email = "sasan.accounts@icloud.com" },
  ]
  dependencies = [
    "attrs>=24.2.0",
    "loguru>=0.7.2",
    "ffmpeg-python>=0.2.0",
]
  description = ""
  dynamic = ["classifiers"]
  license = { text = "MIT" }
  name = "abs-library-tools"
  requires-python = ">=3.11"
  version = "0.1.0"

  [project.urls]
    homepage = "https://github.com/sasanjac/abs-library-tools"

[build-system]
  build-backend = "hatchling.build"
  requires      = ["hatchling"]

[tool.rye]
  dev-dependencies = [
    "commitizen>=3.28.0",
    "ipykernel>=6.29.5",
    "mypy>=1.11.0",
    "pytest-cov>=5.0.0",
    "pytest-xdist>=3.6.1",
    "pytest>=8.3.1",
    "ruff>=0.5.5",
  ]
  managed = true

[tool.hatch.metadata]
  allow-direct-references = true

[tool.hatch.build.targets.wheel]
  packages = ["src/alt"]

[tool.ruff]
  line-length = 120

  [tool.ruff.lint]
    ignore = [
      "ANN002",
      "ANN003",
      "ANN101",
      "ANN102",
      "C901",
      "D100",
      "D101",
      "D102",
      "D103",
      "D104",
      "D105",
      "D106",
      "D107",
      "D202",
      "D203",
      "D401",
      "E402",
      "E501",
    ]
    select = ["ALL"]

    [tool.ruff.lint.extend-per-file-ignores]
      "tests/*" = ["ANN001", "ANN201", "INP001", "PLR0913", "S101"]

    [tool.ruff.lint.flake8-import-conventions.extend-aliases]
      "collections.abc"  = "cabc"
      "datetime"         = "dt"
      "geopandas"        = "gpd"
      "numpy.typing"     = "npt"
      "rasterio"         = "rio"
      "shapely.geometry" = "shg"
      "typing"           = "t"

[tool.ruff.lint.flake8-type-checking]
  runtime-evaluated-decorators = ["attrs.define"]

[tool.ruff.lint.isort]
  force-single-line = true

[tool.ruff.lint.pydocstyle]
  convention = "pep257"

[tool.ruff.lint.pep8-naming]
  classmethod-decorators = ["classmethod", "pydantic.field_validator"]

[tool.commitizen]
  name = "cz_conventional_commits"
  tag_format = "$version"
  version = "2.3.0"
  version_files = [
    "pyproject.toml:version",
  ]

[tool.mypy]
  follow_imports         = "normal"
  ignore_missing_imports = true
  mypy_path              = "src/alt"
  namespace_packages     = true
  strict_optional        = true
  warn_no_return         = true
  warn_redundant_casts   = true
  warn_unused_ignores    = true

[tool.pytest.ini_options]
  python_files = "test_*.py"
  testpaths    = ["tests"]

[tool.coverage.run]
  branch = true
  omit   = ["__pypackages__/*", "build/*", "tests/*"]
  source = ["src/alt"]

[tool.coverage.report]
  show_missing = true

[tool.coverage.xml]
  output = "coverage.xml"

[tool.pyright]
  exclude = ["**/__pycache__"]
